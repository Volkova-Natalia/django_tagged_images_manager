version: '3.8'
services:
  web:
    container_name: tagged_images_manager_service_aws_web_container
    build:
      context: .
      dockerfile: Dockerfile_AWS
    image: tagged_images_manager_service_aws_web
    command: >
      sh -c "./scripts/wait-for-postgres.sh &&
             python3 -m manage migrate &&
             ./scripts/wait-for-postgres.sh &&
             python3 -m manage runserver 0.0.0.0:8000"
    volumes:
      - .:/tagged_images_manager_service
    ports:
      - 8000:8000
    depends_on:
      - db
    environment:
      - ENVIRONMENT=AWS
      - POSTGRES_DB=tagged_images_manager_service_db
      - POSTGRES_HOST=db

  db:
    container_name: tagged_images_manager_service_aws_db_container
    build:
      context: .
      dockerfile: Dockerfile_postgresql
    image: tagged_images_manager_service_aws_postgresql
    environment:
      - POSTGRES_DB=tagged_images_manager_service_db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    restart: always
    volumes:
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - aws-app-db-data:/var/lib/postgresql

volumes:
  aws-app-db-data:
